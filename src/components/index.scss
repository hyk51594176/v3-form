@use 'sass:math';

$--sm: 768px !default;
$--md: 992px !default;
$--lg: 1200px !default;
$--xl: 1920px !default;

$--breakpoints: (
  'xs': (
    max-width: $--sm - 1
  ),
  'sm': (
    min-width: $--sm
  ),
  'md': (
    min-width: $--md
  ),
  'lg': (
    min-width: $--lg
  ),
  'xl': (
    min-width: $--xl
  )
);

@mixin res($key, $map: $--breakpoints) {
  // 循环断点Map，如果存在则返回
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "Undefeined points: `#{$map}`";
  }
}
.v3-form {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  padding: 20px;
  @for $i from 0 through 24 {
    .col-#{$i} {
      width: (math.div(1, 24) * $i * 100) * 1%;
    }

    .col-offset-#{$i} {
      margin-left: (math.div(1, 24) * $i * 100) * 1%;
    }
  }

  @include res(xs) {
    .col-xs-0 {
      display: none;
    }
    @for $i from 0 through 24 {
      .col-xs-#{$i} {
        width: (math.div(1, 24) * $i * 100) * 1%;
      }

      .col-xs-offset-#{$i} {
        margin-left: (math.div(1, 24) * $i * 100) * 1%;
      }
    }
  }

  @include res(sm) {
    .col-sm-0 {
      display: none;
    }
    @for $i from 0 through 24 {
      .col-sm-#{$i} {
        width: (math.div(1, 24) * $i * 100) * 1%;
      }
      .col-sm-offset-#{$i} {
        margin-left: (math.div(1, 24) * $i * 100) * 1%;
      }
    }
  }

  @include res(md) {
    .col-md-0 {
      display: none;
    }
    @for $i from 0 through 24 {
      .col-md-#{$i} {
        width: (math.div(1, 24) * $i * 100) * 1%;
      }
      .col-md-offset-#{$i} {
        margin-left: (math.div(1, 24) * $i * 100) * 1%;
      }
    }
  }

  @include res(lg) {
    .col-lg-0 {
      display: none;
    }
    @for $i from 0 through 24 {
      .col-lg-#{$i} {
        width: (math.div(1, 24) * $i * 100) * 1%;
      }
      .col-lg-offset-#{$i} {
        margin-left: (math.div(1, 24) * $i * 100) * 1%;
      }
    }
  }

  @include res(xl) {
    .col-xl-0 {
      display: none;
    }
    @for $i from 0 through 24 {
      .col-xl-#{$i} {
        width: (math.div(1, 24) * $i * 100) * 1%;
      }
      .col-xl-offset-#{$i} {
        margin-left: (math.div(1, 24) * $i * 100) * 1%;
      }
    }
  }
}

.v3-form-item {
  display: inline-flex;
  padding-bottom: 10px;
  align-items: center;
  align-self: baseline;
  min-width: 100px;
  .required {
    &:before {
      display: inline-block;
      margin-right: 4px;
      color: #ff4d4f;
      font-size: 14px;
      font-family: SimSun, sans-serif;
      content: '*';
    }
  }
  
}
.v3-form-item-label {
  margin-right: 8px;
  flex-shrink: 0;
  color: rgba(0, 0, 0, 0.85);
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.v3-form-item-container {
  position: relative;
  min-width: 100px;
  width: 100%;
}
.v3-form-item-error {
  color: #ff4d4f;
  font-size: 12px;
  position: absolute;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
  bottom: -20px;
  left: 0;
}
.item_error {
  padding-bottom: 25px;
  *{
    border-color: red !important;
    --el-input-border-color: red !important;
    --el-input-focus-border-color: red !important;
    --el-input-hover-border-color: red !important;
  }
}
.v3-form-item-top {
  flex-direction: column;
  align-items: flex-start;
}